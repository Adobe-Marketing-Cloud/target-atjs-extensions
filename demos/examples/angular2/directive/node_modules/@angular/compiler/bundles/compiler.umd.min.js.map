{"version":3,"sources":["/Users/arick/Angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","core","this","_angular_core","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","templateVisitAll","visitor","asts","context","result","visit","ast","forEach","astResult","push","splitNsName","elementName","colonIndex","indexOf","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","getHtmlTagDefinition","TAG_DEFINITIONS","toLowerCase","_DEFAULT_TAG_DEFINITION","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","_i","arguments","length","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","trim","visitValue","value","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","obj","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","_sanitizeIdentifier","name","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","Éµstringify","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","token","tokenReference","createHostComponentMeta","hostTypeReference","compMeta","hostViewType","template","CssSelector","parse","getMatchingElementTemplate","CompileDirectiveMetadata","isHost","type","diDeps","lifecycleHooks","CompileTemplateMetadata","encapsulation","ViewEncapsulation","None","templateUrl","styles","styleUrls","ngContentSelectors","animations","isInline","externalStylesheets","interpolation","exportAs","changeDetection","ChangeDetectionStrategy","Default","inputs","outputs","host","isComponent","selector","providers","viewProviders","queries","viewQueries","componentViewType","rendererType","id","data","entryComponents","componentFactory","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","sourceUrl","url","templateSourceUrl","ngModuleType","templateMeta","sharedStylesheetJitUrl","meta","pathParts","split","baseName","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAstChildren","visitAll","visitBinary","left","right","visitChain","expressions","visitConditional","condition","trueExp","falseExp","visitFunctionCall","target","args","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","CompilerInjectable","x","assertArrayOfStrings","isDevMode","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","_createInterpolateRegExp","config","pattern","start","end","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","nodes","spanOf","sourceSpan","offset","Element","endSourceSpan","children","findNode","position","path","_super","class_1","apply","span","RecursiveVisitor","AstPath","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","char","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","join","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","map","a","computeMsgId","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","h","count","endian","byteAt","word","word32ToByteString","hex","toString","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","y","sum","Math","max","tmpSum","num","product","bToThePower","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","attrs","find","attr","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","expandNodes","expander","_Expander","ExpansionResult","isExpanded","errors","_expandPluralForm","cases","PLURAL_CASES","match","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","ProviderAst","multiProvider","providerType","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","dirProvider","_resolveProviders","ProviderAstType","Component","Directive","directivesWithComponentFirst","filter","dir","PublicService","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","selectors","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","elementNames","allKnownElementNames","notElementNames","Set","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","from","sort","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","warnOnlyOnce","warnings","warningCounts","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","classes","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","values","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","out","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","unshift","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","base","encodeURI","baseParts","lastIndexOf","substring","isDirectiveMetadata","findLast","arr","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","summaryFileName","fileName","fileNameWithoutSuffix","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","_isNgModuleMetadata","NgModule","_isPipeMetadata","Pipe","flattenArray","tree","resolveForwardRef","dedupeArray","array","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ÉµERROR_COMPONENT_TYPE","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","providerFlags","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponentFactories","entryComponent","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","requiresQuotes","_LEGAL_IDENTIFIER_RE","_createIndent","res","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","entries","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Attribute","Property","Animation","bindingType","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","srcFileUrl","serializeSummaries","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","forJitSerializer","ForJitSerializer","resolvedSymbol","addOrMergeSummary","symbol","metadata","processedIndex","isLibraryFile","summary","resolveSummary","resolveSymbol","addLibType","addSourceType","summaryKind","CompileSummaryKind","ngModuleSummary","exportedDirectives","exportedPipes","summary_1","json","deserializeSummaries","symbolCache","deserializer","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","_createTypeReferenceStub","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","programStaticSymbols","metadataResolver","_createNgModules","ngModules","symbolsMissingModule","_analyzeNgModules","analyzeAndValidateNgModules","programSymbols","ngModuleMetas","moduleMetasByRef","ngModule","ngModuleByPipeOrDirective","ngModulesByFile","ngDirectivesByFile","ngPipesByFile","ngInjectablesByFile","filePaths","isInjectable","ngModuleMeta","declaredDirectives","dirIdentifier","fileUrl","declaredPipes","pipeIdentifier","files","srcUrl","pipes","injectables","extractProgramSymbols","staticSymbolResolver","staticSymbols","isSourceFile","getSymbolsOf","symbolMeta","__symbolic","programPipesAndDirectives","ngModulePipesAndDirective","addNgModule","staticSymbol","getNgModuleMetadata","pipe","transitiveModule","modules","modMeta","isDirective","isPipe","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotCompiler","compilerHost","options","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","console","ÉµConsole","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","CompilerConfig","defaultEncapsulation","Emulated","useJit","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","locale","enableSummariesForJit","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","_this","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl$$1","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","createOutputContext","importExpr$$1","moduleName","runtime","genFilePath","_mergeOptions","optionsArr","_lastDefined","_mergeArrays","setPrototypeOf","__proto__","hasOwnProperty","VERSION","Version","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","call","visitChildren","cb","results","t","members","assertNoMembers","JSON","stringify","cache","declarationFile","memberSuffix","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","contentType","closedByParent","isVoid","_f","ignoreFirstLf","canSelfClose","parentToAdd","requireExtraParent","currentParent","lcParent","isParentTemplate","isClosedByChild","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","script","title","textarea","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","MODULE_SUFFIX","ValueTransformer","SyncAsync","assertSync","ÉµisPromise","then","all","syncAsyncValues","some","Promise","HOST_REG_EXP","CompileAnimationEntryMetadata","definitions","CompileAnimationStateMetadata","CompileAnimationStateDeclarationMetadata","stateNameExpr","CompileAnimationStateTransitionMetadata","stateChangeExpr","steps","CompileAnimationMetadata","CompileAnimationKeyframesSequenceMetadata","CompileAnimationStyleMetadata","CompileAnimationAnimateMetadata","timings","CompileAnimationWithStepsMetadata","CompileAnimationSequenceMetadata","CompileAnimationGroupMetadata","Injectable","CompileStylesheetMetadata","toSummary","anim","hostListeners","matches","inputsMap","bindConfig","outputsMap","CompilePipeMetadata","pure","CompileNgModuleMetadata","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","CompileReflector","parameters","typeOrFunc","annotations","propMetadata","lcProperty","componentModuleUrl","cmpMetadata","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","$BANG","$HASH","$PERCENT","$AMPERSAND","$LPAREN","$RPAREN","$STAR","$COMMA","$PERIOD","$COLON","$LT","$QUESTION","$X","$LBRACKET","$BACKSLASH","$RBRACKET","$CARET","$u","$x","$BAR","$RBRACE","InterpolationConfig","fromArray","markers","KEYWORDS","tokens","scanToken","decorators","ctorParameters","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","next","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","bindings","rawKey","letStart","start_2","letName","locationText","skip","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","parentOf","childOf","first","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","ParseTreeResult","rootNodes","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","container","newParent","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","strAttrs","seen","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_ATTR_PREFIX","_I18N_COMMENT_PREFIX_REGEXP","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visitNodes","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","significantChildren","XmlTagDefinition","XmlParser","Serializer","write","load","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_FILE_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","_CONTEXT_GROUP_TAG","_CONTEXT_TAG","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","startTagPh","closeTagPh","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_VERSION$1","_XMLNS$1","_DEFAULT_SOURCE_LANG$1","_PLACEHOLDER_TAG$1","_PLACEHOLDER_SPANNING_TAG","_XLIFF_TAG","_SOURCE_TAG$1","_TARGET_TAG$1","_UNIT_TAG$1","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","tagPh","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","versionAttr","startAttr","endAttr","startId","endId","_MESSAGES_TAG","_MESSAGE_TAG","_PLACEHOLDER_TAG$2","_EXEMPLE_TAG","_SOURCE_TAG$2","_DOCTYPE","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exText","_TRANSLATIONS_TAG","_TRANSLATION_TAG","_PLACEHOLDER_TAG$3","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","MissingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","digestFn","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","warn","_htmlParser","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","ÉµCodegenComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","createModuleFactory","Éµcmf","moduleDef","Éµmod","moduleProviderDef","Éµmpd","RegisterModuleFactoryFn","ÉµregisterModuleFactory","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","ÉµinlineInterpolate","interpolate","Éµinterpolate","EMPTY_ARRAY","ÉµEMPTY_ARRAY","EMPTY_MAP","ÉµEMPTY_MAP","Renderer","viewDef","Éµvid","elementDef","Éµeld","anchorDef","Éµand","textDef","Éµted","directiveDef","Éµdid","Éµprd","queryDef","Éµqud","pureArrayDef","Éµpad","pureObjectDef","Éµpod","purePipeDef","Éµppd","pipeDef","Éµpid","nodeValue","Éµnov","ngContentDef","Éµncd","Éµunv","createRendererType2","Éµcrt","RendererType2","ViewDefinition","createComponentFactory","Éµccf","expanded","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_hasViewContainer","_queriedTokens","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","read","tokenRef","currentEl","distance","descendants","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","isSelf","prevElement","NgModuleProviderAnalyzer","extraProviders","ngModuleProvider","errorString","requestorSourceSpan","foundLocal","ElementSchemaRegistry","hasProperty","schemaMetas","hasElement","getMappedPropName","getDefaultComponentElementName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","style$$1","PROPERTY_PARTS_SEPARATOR","ATTRIBUTE_PREFIX","CLASS_PREFIX","STYLE_PREFIX","ANIMATE_PROP_PREFIX","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","BindingParser","_exprParser","_schemaRegistry","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","dirMeta","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","binding","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","eventName","_parseAction","errors_1","collector","PipeCollector","pipeName","pipeMeta","isAttr","report","BIND_NAME_REGEXP","KW_BIND_IDX","KW_LET_IDX","KW_REF_IDX","KW_ON_IDX","KW_BINDON_IDX","KW_AT_IDX","IDENT_KW_IDX","IDENT_BANANA_BOX_IDX","IDENT_PROPERTY_IDX","IDENT_EVENT_IDX","TEMPLATE_ATTR","TEMPLATE_ATTR_PREFIX","TEXT_CSS_SELECTOR","TEMPLATE_ATTR_DEPRECATION_WARNING","TEMPLATE_TRANSFORMS","InjectionToken","TemplateParseError","TemplateParseResult","templateAst","usedPipes","_config","_reflector","transforms","tryParse","tryParseHtml","expandHtml","getInterpolationConfig","htmlAstWithErrors","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","Optional","Inject","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","queryStartIndex","preparsedElement","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","transformedHasViewContainer","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","size","props","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","isLiteral","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","ResourceLoader","DEFAULT_PACKAGE_URL_PROVIDER","provide","PACKAGE_ROOT_URL","_packagePrefix","resolvedUrl","resolvedParts","_resourceLoader","_urlResolver","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","normalizeTemplateOnly","normalizeExternalStylesheets","prenomData","normalizeLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","normalizeStylesheet","TemplatePreparseVisitor","templateStyles","_loadMissingExternalStylesheets","loadedStylesheets","styleUrl","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","textContent_1","typeMetadata","throwIfNotFound","propertyMetadata","_mergeWithPropertyMetadata","dm","directiveType","Input","bindingPropertyName","Output","hostBindings","HostBinding","hostBinding","hostPropertyName","startWith","HostListener","hostListener","Query","_merge","_extractPublicName","def","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","assign","mergedQueries","moduleId","isNgModule","metas","annotation","SummaryResolver","getLibraryFileName","getImportAs","addSummary","JitSummaryResolver","_summaries","ERROR_COLLECTOR_TOKEN","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","_createProxyClass","baseType","delegate","proxyClass","setDelegate","overriddenName","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","comp","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","paramEntry","Host","Self","SkipSelf","attributeName","_getTokenMetadata","depsTokens","compileToken","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","isViewQuery","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Dynamic","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","QUOTED_KEYS","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","VERSION$1","JS_B64_PREFIX","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","sourceFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","srcFilePath","emitSourceMaps","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","suppliedParameters","HTML","URL","RESOURCE_URL","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","schema","NO_ERRORS_SCHEMA","CUSTOM_ELEMENTS_SCHEMA","elementProperties","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","applyScope","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","scopedPart","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","compileStyles","needsStyleShim","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","IMPLICIT_TEMPLATE_VAR","ViewCompileResult","viewClassVar","rendererTypeVar","embeddedViewCount","renderComponentVarName","template_1","customRenderData","renderComponentVar","viewBuilderFactory","embeddedViewIndex","ViewBuilder","viewName","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","targetStatements","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","OnPush","viewFactory","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childVisitor","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","ÉµelementEventFullName","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","outputAst","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","hostEventAst","updateDirectives","_addProviderNode","componentDirMeta","tokenExpr_1","currViewExpr","currBuilder","refNodeIndex","varAst","varValue","valueExpr_1","valueExpr_2","nodeIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","nameResolver","self","logWithNodeDef","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","GeneratedFile","sourceOrStmts","indexBySymbol","processedSummaryBySymbol","processedSummaries","clone_1","processedSummary","processValue","summaries","importAs","__symbol","baseSymbol","isLibrary","ngModuleSymbols","serializeSummaryWithDeps","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","serializedSymbol","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_ngModuleCompiler","_outputEmitter","_localeId","_translationFormat","_enableSummariesForJit","_symbolResolver","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","emitAllStubs","sourceModules","_compileStubFile","emitPartialStubs","emitAllImpls","_compileImplFile","partial","generatedFiles","ngFactoryOutputCtx","_createOutputContext","jitSummaryOutputCtx","partialJitStubRequired","partialFactoryStubRequired","stylesheetMeta","styleContext","_codegenSourceModule","_createSummary","_compileModule","componentStylesheet","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","hostType","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","arity","getTypeArity","importModule","fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","stylesheetMetadata","compiledStylesheet","ANGULAR_CORE","ANGULAR_ROUTER","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","annotationNames","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","getResourcePath","importSymbol","rootSymbol","findDeclaration","recordImportAs","containingFile","getSymbolByModule","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","typeHasRequiredAnnotation","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","injectionToken","opaqueToken","ROUTES","ContentChild","ContentChildren","ViewChild","ViewChildren","trigger","state","transition","animate","keyframes","sequence","group","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","recordedSimplifyInContext","PopulatedScope","ResolvedStaticSymbol","SUPPORTED_SCHEMA_VERSION","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","importedFilePath","containingFilePath","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","topLevelSymbolNames_1","origins_1","metadataKey","origin","originFilePath","resolveModule","createResolvedSymbol","_loop_1","moduleExport","export","exportSymbol","symName","resolvedModule","createExport","this_1","nestedExports","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","module_1","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","getOutputFileName","_loadSummaryFile","summaryFilePath","loadSummary","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_injector","_compilerConfig","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","getNgContentSelectors","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ModuleWithComponentFactories","mainModule","mainNgModule","nestedNgModule","ngModuleFactory","moduleMeta_1","Compiler","ModuleBoundCompiler","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","hostClass","ÉµgetComponentViewDefinitionFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","_delegate","_ngModule","injector","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","Extractor","messageBundle","compMetas","extractor","JitReflector","reflectionCapabilities","ÉµReflectionCapabilities","scheme","_NO_RESOURCE_LOADER","baseHtmlParser","COMPILER_PROVIDERS","parser","Ignore","TRANSLATIONS","JitCompilerFactory","defaultOptions","compilerOptions","useDebug","_defaultOptions","createCompiler","opts","ReflectiveInjector","resolveAndCreate","COMPILER_OPTIONS","platformCoreDynamic","createPlatformFactory","platformCore","CompilerFactory"],"mappings":"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YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AASJ,GAAIC,SAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SAuDTC,QACA,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZz8D,yBAA4B,SAAUx0B,QAEtC,QAASw0B,4BACL,GAAIsC,OAAQ92B,OAAOs7B,KAAK7uC,OAASA,IAqCjC,OApCAqqC,OAAMo6D,WACNR,OAAO/i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","file":"/Users/arick/Angular/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v4.3.1\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/**\n * @license Angular v4.3.1\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('4.3.1');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    Object.defineProperty(BoundElementPropertyAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === PropertyBindingType.Animation; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    Object.defineProperty(BoundEventAst.prototype, \"fullName\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return BoundEventAst.calcFullName(this.name, this.target, this.phase); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundEventAst.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !!this.phase; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     */\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\nvar ProviderAstType = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\nvar PropertyBindingType = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\nvar TagContentType = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = ((this._attrValueMap.get(name)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = ((this._attrValuePartialMap.get(name)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    /**\n     * @param {?} selectors\n     */\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODULE_SUFFIX = '';\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? ((null)) : val;\n}\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (_angular_core.ÉµisPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return _angular_core.ÉµisPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(_angular_core.ÉµisPromise) ? Promise.all(syncAsyncValues) : (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        ((error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return ((error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return ((error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\nvar CompileAnimationEntryMetadata = (function () {\n    /**\n     * @param {?=} name\n     * @param {?=} definitions\n     */\n    function CompileAnimationEntryMetadata(name, definitions) {\n        if (name === void 0) { name = null; }\n        if (definitions === void 0) { definitions = null; }\n        this.name = name;\n        this.definitions = definitions;\n    }\n    return CompileAnimationEntryMetadata;\n}());\n/**\n * @abstract\n */\nvar CompileAnimationStateMetadata = (function () {\n    function CompileAnimationStateMetadata() {\n    }\n    return CompileAnimationStateMetadata;\n}());\nvar CompileAnimationStateDeclarationMetadata = (function (_super) {\n    __extends(CompileAnimationStateDeclarationMetadata, _super);\n    /**\n     * @param {?} stateNameExpr\n     * @param {?} styles\n     */\n    function CompileAnimationStateDeclarationMetadata(stateNameExpr, styles) {\n        var _this = _super.call(this) || this;\n        _this.stateNameExpr = stateNameExpr;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStateDeclarationMetadata;\n}(CompileAnimationStateMetadata));\nvar CompileAnimationStateTransitionMetadata = (function (_super) {\n    __extends(CompileAnimationStateTransitionMetadata, _super);\n    /**\n     * @param {?} stateChangeExpr\n     * @param {?} steps\n     */\n    function CompileAnimationStateTransitionMetadata(stateChangeExpr, steps) {\n        var _this = _super.call(this) || this;\n        _this.stateChangeExpr = stateChangeExpr;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationStateTransitionMetadata;\n}(CompileAnimationStateMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationMetadata = (function () {\n    function CompileAnimationMetadata() {\n    }\n    return CompileAnimationMetadata;\n}());\nvar CompileAnimationKeyframesSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationKeyframesSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationKeyframesSequenceMetadata(steps) {\n        if (steps === void 0) { steps = []; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationKeyframesSequenceMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationStyleMetadata = (function (_super) {\n    __extends(CompileAnimationStyleMetadata, _super);\n    /**\n     * @param {?} offset\n     * @param {?=} styles\n     */\n    function CompileAnimationStyleMetadata(offset, styles) {\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.offset = offset;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationStyleMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationAnimateMetadata = (function (_super) {\n    __extends(CompileAnimationAnimateMetadata, _super);\n    /**\n     * @param {?=} timings\n     * @param {?=} styles\n     */\n    function CompileAnimationAnimateMetadata(timings, styles) {\n        if (timings === void 0) { timings = 0; }\n        if (styles === void 0) { styles = null; }\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.styles = styles;\n        return _this;\n    }\n    return CompileAnimationAnimateMetadata;\n}(CompileAnimationMetadata));\n/**\n * @abstract\n */\nvar CompileAnimationWithStepsMetadata = (function (_super) {\n    __extends(CompileAnimationWithStepsMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationWithStepsMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    return CompileAnimationWithStepsMetadata;\n}(CompileAnimationMetadata));\nvar CompileAnimationSequenceMetadata = (function (_super) {\n    __extends(CompileAnimationSequenceMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationSequenceMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationSequenceMetadata;\n}(CompileAnimationWithStepsMetadata));\nvar CompileAnimationGroupMetadata = (function (_super) {\n    __extends(CompileAnimationGroupMetadata, _super);\n    /**\n     * @param {?=} steps\n     */\n    function CompileAnimationGroupMetadata(steps) {\n        if (steps === void 0) { steps = null; }\n        return _super.call(this, steps) || this;\n    }\n    return CompileAnimationGroupMetadata;\n}(CompileAnimationWithStepsMetadata));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = _angular_core.Éµstringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + _angular_core.Éµstringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\nvar CompileSummaryKind = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = function () {\n        return {\n            animations: this.animations.map(function (anim) { return anim.name; }),\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nfunction createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n    var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n    return CompileDirectiveMetadata.create({\n        isHost: true,\n        type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n        template: new CompileTemplateMetadata({\n            encapsulation: _angular_core.ViewEncapsulation.None,\n            template: template,\n            templateUrl: '',\n            styles: [],\n            styleUrls: [],\n            ngContentSelectors: [],\n            animations: [],\n            isInline: true,\n            externalStylesheets: [],\n            interpolation: null\n        }),\n        exportAs: null,\n        changeDetection: _angular_core.ChangeDetectionStrategy.Default,\n        inputs: [],\n        outputs: [],\n        host: {},\n        isComponent: true,\n        selector: '*',\n        providers: [],\n        viewProviders: [],\n        queries: [],\n        viewQueries: [],\n        componentViewType: hostViewType,\n        rendererType: { id: '__Host__', encapsulation: _angular_core.ViewEncapsulation.None, styles: [], data: {} },\n        entryComponents: [],\n        componentFactory: null\n    });\n}\nvar CompilePipeMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    /**\n     * @param {?} __0\n     */\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = function () {\n        var /** @type {?} */ module = ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.parameters = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.annotations = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileReflector.prototype.propMetadata = function (typeOrFunc) { };\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    CompileReflector.prototype.hasLifecycleHook = function (type, lcProperty) { };\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    CompileReflector.prototype.componentModuleUrl = function (type, cmpMetadata) { };\n    /**\n     * @abstract\n     * @param {?} ref\n     * @return {?}\n     */\n    CompileReflector.prototype.resolveExternalReference = function (ref) { };\n    return CompileReflector;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? _angular_core.ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, missingTranslation = _b.missingTranslation, enableLegacyTemplate = _b.enableLegacyTemplate;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate !== false;\n    }\n    return CompilerConfig;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = (function () {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    /**\n     * @param {?} span\n     */\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n        ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitBinary: function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitChain: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitConditional: function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitFunctionCall: function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitImplicitReceiver: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitInterpolation: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedRead: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedWrite: function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralMap: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralPrimitive: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPipe: function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPrefixNot: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitNonNullAssert: function (ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyRead: function (ast) { visit(ast.receiver); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyWrite: function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitQuote: function (ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafeMethodCall: function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\nfunction CompilerInjectable() {\n    return function (x) { return x; };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (!_angular_core.isDevMode() || value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (_angular_core.isDevMode() && value != null) {\n        var /** @type {?} */ start_1 = (value[0]);\n        var /** @type {?} */ end_1 = (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    \n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nLexer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nLexer.ctorParameters = function () { return []; };\nvar Token = (function () {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    /**\n     * @param {?} input\n     */\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    /**\n     * @param {?} _lexer\n     */\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nParser.ctorParameters = function () { return [\n    { type: Lexer, },\n]; };\nvar _ParseAST = (function () {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name = ((null));\n            var /** @type {?} */ expression = ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name = this.expectTemplateBindingKey();\n                }\n                else {\n                    name = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_2 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_2 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\nvar ParseErrorLevel = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    /**\n     * @param {?} path\n     * @param {?=} position\n     */\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = function () { return ((this.path.pop())); };\n    return AstPath;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Text = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    function Attribute$1(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute$1.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute$1;\n}());\nvar Element = (function () {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?=} startSourceSpan\n     * @param {?=} endSourceSpan\n     */\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TokenType$1 = {};\nTokenType$1.TAG_OPEN_START = 0;\nTokenType$1.TAG_OPEN_END = 1;\nTokenType$1.TAG_OPEN_END_VOID = 2;\nTokenType$1.TAG_CLOSE = 3;\nTokenType$1.TEXT = 4;\nTokenType$1.ESCAPABLE_RAW_TEXT = 5;\nTokenType$1.RAW_TEXT = 6;\nTokenType$1.COMMENT_START = 7;\nTokenType$1.COMMENT_END = 8;\nTokenType$1.CDATA_START = 9;\nTokenType$1.CDATA_END = 10;\nTokenType$1.ATTR_NAME = 11;\nTokenType$1.ATTR_VALUE = 12;\nTokenType$1.DOC_TYPE = 13;\nTokenType$1.EXPANSION_FORM_START = 14;\nTokenType$1.EXPANSION_CASE_VALUE = 15;\nTokenType$1.EXPANSION_CASE_EXP_START = 16;\nTokenType$1.EXPANSION_CASE_EXP_END = 17;\nTokenType$1.EXPANSION_FORM_END = 18;\nTokenType$1.EOF = 19;\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    function Token$1(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token$1;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    /**\n     * @param {?} error\n     */\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    /**\n     * @param {?} getTagDefinition\n     */\n    function Parser$1(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser$1.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser$1;\n}());\nvar _TreeBuilder = (function () {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent = this._getParentElement();\n            if (parent != null && parent.children.length == 0 &&\n                this.getTagDefinition(parent.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = function () {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ el = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(el.name).isVoid) {\n                this._elementStack.pop();\n            }\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = function (el) {\n        if (this._elementStack.length > 0) {\n            var /** @type {?} */ parentEl = this._elementStack[this._elementStack.length - 1];\n            if (this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                this._elementStack.pop();\n            }\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: this._elementStack[this._elementStack.length - 1], container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\nvar Endian = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = (function () {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\nvar Text$1 = (function () {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function Text$1(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text$1.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n    return Text$1;\n}());\nvar Container = (function () {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = function (text, context) { };\n    \n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n    \n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n    \n    return RecurseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) { return visitor.toI18nMessage(nodes, meaning, description, id); };\n}\nvar _I18nVisitor = (function () {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\nvar _VisitorMode = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value; });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !((ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = ((nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        get: function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    /**\n     * @abstract\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Serializer.prototype.write = function (messages, locale) { };\n    /**\n     * @abstract\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Serializer.prototype.load = function (content, url) { };\n    /**\n     * @abstract\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.digest = function (message) { };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _Visitor$1 = (function () {\n    function _Visitor$1() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitTag = function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitText = function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDeclaration = function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor$1.prototype._serializeAttributes = function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor$1.prototype.visitDoctype = function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor$1;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\nvar Declaration = (function () {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    /**\n     * @param {?} unescapedValue\n     */\n    function Text$2(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    \n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text$2.prototype.visit = function (visitor) { return visitor.visitText(this); };\n    return Text$2;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    /**\n     * @param {?=} ws\n     */\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype });\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor$1() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: (this._nextPlaceholderId++).toString() })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor$1.prototype.serialize = function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor$1;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n$1() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitText = function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitElement = function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$1.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$1.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n$1;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor$2() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitText = function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitTagPlaceholder = function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor$2.prototype.visitIcuPlaceholder = function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor$2.prototype.serialize = function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor$2;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n$2() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.convert = function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitText = function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansion = function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitExpansionCase = function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitElement = function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitComment = function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n$2.prototype.visitAttribute = function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n$2.prototype._addError = function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n$2;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\nHtmlParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nHtmlParser.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = _angular_core.MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === _angular_core.MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = _angular_core.MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    return Identifiers;\n}());\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleName: CORE,\n    runtime: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleName: CORE, runtime: _angular_core.ElementRef };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE, runtime: _angular_core.NgModuleRef };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE, runtime: _angular_core.ViewContainerRef };\nIdentifiers.ChangeDetectorRef = {\n    name: 'ChangeDetectorRef',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectorRef\n};\nIdentifiers.QueryList = { name: 'QueryList', moduleName: CORE, runtime: _angular_core.QueryList };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE, runtime: _angular_core.TemplateRef };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ÉµCodegenComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµCodegenComponentFactoryResolver\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: _angular_core.ComponentFactoryResolver\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE, runtime: _angular_core.ComponentFactory };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE, runtime: _angular_core.ComponentRef };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE, runtime: _angular_core.NgModuleFactory };\nIdentifiers.createModuleFactory = {\n    name: 'Éµcmf',\n    moduleName: CORE,\n    runtime: _angular_core.Éµcmf,\n};\nIdentifiers.moduleDef = {\n    name: 'Éµmod',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmod,\n};\nIdentifiers.moduleProviderDef = {\n    name: 'Éµmpd',\n    moduleName: CORE,\n    runtime: _angular_core.Éµmpd,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ÉµregisterModuleFactory',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµregisterModuleFactory,\n};\nIdentifiers.Injector = { name: 'Injector', moduleName: CORE, runtime: _angular_core.Injector };\nIdentifiers.ViewEncapsulation = {\n    name: 'ViewEncapsulation',\n    moduleName: CORE,\n    runtime: _angular_core.ViewEncapsulation\n};\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleName: CORE,\n    runtime: _angular_core.ChangeDetectionStrategy\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleName: CORE,\n    runtime: _angular_core.SecurityContext,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE, runtime: _angular_core.LOCALE_ID };\nIdentifiers.TRANSLATIONS_FORMAT = {\n    name: 'TRANSLATIONS_FORMAT',\n    moduleName: CORE,\n    runtime: _angular_core.TRANSLATIONS_FORMAT\n};\nIdentifiers.inlineInterpolate = {\n    name: 'ÉµinlineInterpolate',\n    moduleName: CORE,\n    runtime: _angular_core.ÉµinlineInterpolate\n};\nIdentifiers.interpolate = { name: 'Éµinterpolate', moduleName: CORE, runtime: _angular_core.Éµinterpolate };\nIdentifiers.EMPTY_ARRAY = { name: 'ÉµEMPTY_ARRAY', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_ARRAY };\nIdentifiers.EMPTY_MAP = { name: 'ÉµEMPTY_MAP', moduleName: CORE, runtime: _angular_core.ÉµEMPTY_MAP };\nIdentifiers.Renderer = { name: 'Renderer', moduleName: CORE, runtime: _angular_core.Renderer };\nIdentifiers.viewDef = { name: 'Éµvid', moduleName: CORE, runtime: _angular_core.Éµvid };\nIdentifiers.elementDef = { name: 'Éµeld', moduleName: CORE, runtime: _angular_core.Éµeld };\nIdentifiers.anchorDef = { name: 'Éµand', moduleName: CORE, runtime: _angular_core.Éµand };\nIdentifiers.textDef = { name: 'Éµted', moduleName: CORE, runtime: _angular_core.Éµted };\nIdentifiers.directiveDef = { name: 'Éµdid', moduleName: CORE, runtime: _angular_core.Éµdid };\nIdentifiers.providerDef = { name: 'Éµprd', moduleName: CORE, runtime: _angular_core.Éµprd };\nIdentifiers.queryDef = { name: 'Éµqud', moduleName: CORE, runtime: _angular_core.Éµqud };\nIdentifiers.pureArrayDef = { name: 'Éµpad', moduleName: CORE, runtime: _angular_core.Éµpad };\nIdentifiers.pureObjectDef = { name: 'Éµpod', moduleName: CORE, runtime: _angular_core.Éµpod };\nIdentifiers.purePipeDef = { name: 'Éµppd', moduleName: CORE, runtime: _angular_core.Éµppd };\nIdentifiers.pipeDef = { name: 'Éµpid', moduleName: CORE, runtime: _angular_core.Éµpid };\nIdentifiers.nodeValue = { name: 'Éµnov', moduleName: CORE, runtime: _angular_core.Éµnov };\nIdentifiers.ngContentDef = { name: 'Éµncd', moduleName: CORE, runtime: _angular_core.Éµncd };\nIdentifiers.unwrapValue = { name: 'Éµunv', moduleName: CORE, runtime: _angular_core.Éµunv };\nIdentifiers.createRendererType2 = { name: 'Éµcrt', moduleName: CORE, runtime: _angular_core.Éµcrt };\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.ViewDefinition = {\n    name: 'ÉµViewDefinition',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.createComponentFactory = { name: 'Éµccf', moduleName: CORE, runtime: _angular_core.Éµccf };\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\nvar ProviderViewContext = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} component\n     */\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._hasViewContainer = false;\n        this._queriedTokens = new Map();\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this._hasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                sortedProviderTypes.indexOf(dir2.directive.type); });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedHasViewContainer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._hasViewContainer; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    this._hasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName(/** @type {?} */ ((dep.token))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                ((provider.token.identifier)).lifecycleHooks ?\n                ((provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) { };\n    /**\n     * @abstract\n     * @param {?} elementName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.securityContext = function (elementName, propName, isAttribute) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.allKnownElementNames = function () { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getMappedPropName = function (propName) { };\n    /**\n     * @abstract\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateProperty = function (name) { };\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.validateAttribute = function (name) { };\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) { };\n    /**\n     * @abstract\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    ElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) { };\n    return ElementSchemaRegistry;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = (function () {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    function StyleWithImports(style$$1, styleUrls) {\n        this.style = style$$1;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_COMMENT_REGEXP = /\\/\\*.+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\nvar BoundPropertyType = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    Object.defineProperty(BoundProperty.prototype, \"isLiteral\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.LITERAL_ATTR; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BoundProperty.prototype, \"isAnimation\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.type === BoundPropertyType.ANIMATION; },\n        enumerable: true,\n        configurable: true\n    });\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} _targetErrors\n     */\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'null', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, _angular_core.SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [_angular_core.SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [_angular_core.SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [_angular_core.SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = ((null));\n    var /** @type {?} */ hrefAttr = ((null));\n    var /** @type {?} */ relAttr = ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nvar PreparsedElementType = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\n/**\n * Provides an array of {\\@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nvar TEMPLATE_TRANSFORMS = new _angular_core.InjectionToken('TemplateTransforms');\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl);\n        var /** @type {?} */ warnings = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; })\n            .filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl) {\n        return this.tryParseHtml(this.expandHtml(/** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component))), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!((element)).references; })\n            .forEach(function (element) { return ((element)).references.forEach(function (reference) {\n            var /** @type {?} */ name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }); });\n    };\n    return TemplateParser;\n}());\nTemplateParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nTemplateParser.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: Parser, },\n    { type: ElementSchemaRegistry, },\n    { type: I18NHtmlParser, },\n    { type: _angular_core.ÉµConsole, },\n    { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n]; };\nvar TemplateParseVisitor = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var selector = CssSelector.parse(directive.selector);\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (directive.exportAs == elOrDirRef.value)) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = function (text, parent) {\n        var /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\nvar ElementOrDirectiveRef = (function () {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    return ElementOrDirectiveRef;\n}());\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = function (url) { return ''; };\n    return ResourceLoader;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * A default provider for {\\@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nvar DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: _angular_core.PACKAGE_ROOT_URL,\n    useValue: '/'\n};\n/**\n * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n *\n * This class can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n *\n * ## Example\n *\n * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n *\n * \\@security When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar UrlResolver = (function () {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    function UrlResolver(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolver.prototype.resolve = function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolver;\n}());\nUrlResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nUrlResolver.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_core.PACKAGE_ROOT_URL,] },] },\n]; };\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\nvar _ComponentIndex = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveNormalizer = (function () {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + _angular_core.Éµstringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + _angular_core.Éµstringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + _angular_core.Éµstringify(prenormData.componentType));\n        }\n        return SyncAsync.then(this.normalizeTemplateOnly(prenormData), function (result) { return _this.normalizeExternalStylesheets(result); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplateOnly = function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this.normalizeLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n            styles: prenormData.styles,\n            styleUrls: prenormData.styleUrls,\n            moduleUrl: prenormData.moduleUrl\n        }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        if (encapsulation === _angular_core.ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = _angular_core.ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: template,\n            templateUrl: templateAbsUrl, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation, isInline: isInline,\n            externalStylesheets: []\n        });\n    };\n    /**\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeExternalStylesheets = function (templateMeta) {\n        return SyncAsync.then(this._loadMissingExternalStylesheets(templateMeta.styleUrls), function (externalStylesheets) { return new CompileTemplateMetadata({\n            encapsulation: templateMeta.encapsulation,\n            template: templateMeta.template,\n            templateUrl: templateMeta.templateUrl,\n            styles: templateMeta.styles,\n            styleUrls: templateMeta.styleUrls,\n            externalStylesheets: externalStylesheets,\n            ngContentSelectors: templateMeta.ngContentSelectors,\n            animations: templateMeta.animations,\n            interpolation: templateMeta.interpolation,\n            isInline: templateMeta.isInline,\n        }); });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) { return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n            var /** @type {?} */ stylesheet = _this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }); })), function (_) { return Array.from(loadedStylesheets.values()); });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeStylesheet = function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style$$1) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style$$1);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nDirectiveNormalizer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveNormalizer.ctorParameters = function () { return [\n    { type: ResourceLoader, },\n    { type: UrlResolver, },\n    { type: HtmlParser, },\n    { type: CompilerConfig, },\n]; };\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DirectiveResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Input; });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Output; });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostBinding; });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return a && a instanceof _angular_core.HostListener; });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return a instanceof _angular_core.Query; });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name = this._extractPublicName(binding);\n            if (!names.has(name)) {\n                names.add(name);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? Object.assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? Object.assign({}, directive.queries, queries) : queries;\n        if (directive instanceof _angular_core.Component) {\n            return new _angular_core.Component({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                moduleId: directive.moduleId,\n                queries: mergedQueries,\n                changeDetection: directive.changeDetection,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                entryComponents: directive.entryComponents,\n                template: directive.template,\n                templateUrl: directive.templateUrl,\n                styles: directive.styles,\n                styleUrls: directive.styleUrls,\n                encapsulation: directive.encapsulation,\n                animations: directive.animations,\n                interpolation: directive.interpolation\n            });\n        }\n        else {\n            return new _angular_core.Directive({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\nDirectiveResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return type instanceof _angular_core.Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LifecycleHooks = {};\nLifecycleHooks.OnInit = 0;\nLifecycleHooks.OnDestroy = 1;\nLifecycleHooks.DoCheck = 2;\nLifecycleHooks.OnChanges = 3;\nLifecycleHooks.AfterContentInit = 4;\nLifecycleHooks.AfterContentChecked = 5;\nLifecycleHooks.AfterViewInit = 6;\nLifecycleHooks.AfterViewChecked = 7;\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj) {\n    return obj instanceof _angular_core.NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + _angular_core.Éµstringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\nNgModuleResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type) {\n    return type instanceof _angular_core.Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    /**\n     * @param {?} _reflector\n     */\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(_isPipeMetadata);\n    };\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(_angular_core.resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + _angular_core.Éµstringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\nPipeResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nPipeResolver.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.isLibraryFile = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    SummaryResolver.prototype.getLibraryFileName = function (fileName) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.resolveSummary = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} filePath\n     * @return {?}\n     */\n    SummaryResolver.prototype.getSymbolsOf = function (filePath) { };\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    SummaryResolver.prototype.getImportAs = function (reference) { };\n    /**\n     * @abstract\n     * @param {?} summary\n     * @return {?}\n     */\n    SummaryResolver.prototype.addSummary = function (summary) { };\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = function (fileName) { return false; };\n    \n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getLibraryFileName = function (fileName) { return null; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    \n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = function (filePath) { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n    \n    return JitSummaryResolver;\n}());\nJitSummaryResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitSummaryResolver.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COLLECTOR_TOKEN = new _angular_core.InjectionToken('ErrorCollector');\nvar CompileMetadataResolver = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?} _reflector\n     * @param {?=} _errorCollector\n     */\n    function CompileMetadataResolver(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + _angular_core.Éµstringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            ((proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        ((proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            return _angular_core.Éµccf(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = factory.ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        var _a = ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation\n            });\n            if (_angular_core.ÉµisPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n        var _this = this;\n        directiveType = _angular_core.resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = ((undefined));\n        if (dirMeta instanceof _angular_core.Component) {\n            // component\n            assertArrayOfStrings('styles', dirMeta.styles);\n            assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n            var /** @type {?} */ animations = dirMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(dirMeta.encapsulation),\n                template: noUndefined(dirMeta.template),\n                templateUrl: noUndefined(dirMeta.templateUrl),\n                styles: dirMeta.styles || [],\n                styleUrls: dirMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(dirMeta.interpolation),\n                isInline: !!dirMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: []\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (dirMeta instanceof _angular_core.Component) {\n            // Component\n            changeDetectionStrategy = ((dirMeta.changeDetection));\n            if (dirMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (dirMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n        var /** @type {?} */ dirMeta = ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType) {\n        var /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = _angular_core.resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if (((type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n        type = _angular_core.resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        // Note: We need an exact check here as @Component / @Directive / ... inherit\n        // from @CompilerInjectable!\n        return annotations.some(function (ann) { return ann.constructor === _angular_core.Injectable; });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = _angular_core.resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n        var /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n        pipeType = _angular_core.resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (paramEntry instanceof _angular_core.Host) {\n                        isHost = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Self) {\n                        isSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.SkipSelf) {\n                        isSkipSelf = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Optional) {\n                        isOptional = true;\n                    }\n                    else if (paramEntry instanceof _angular_core.Attribute) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (paramEntry instanceof _angular_core.Inject) {\n                        token = paramEntry.token;\n                    }\n                    else if (paramEntry instanceof _angular_core.InjectionToken) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v5.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n        token = _angular_core.resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = _angular_core.resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = ((providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n        var /** @type {?} */ compileDeps = ((undefined));\n        var /** @type {?} */ compileTypeMetadata = ((null));\n        var /** @type {?} */ compileFactoryMetadata = ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\nCompileMetadataResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nCompileMetadataResolver.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: NgModuleResolver, },\n    { type: DirectiveResolver, },\n    { type: PipeResolver, },\n    { type: SummaryResolver, },\n    { type: ElementSchemaRegistry, },\n    { type: DirectiveNormalizer, },\n    { type: _angular_core.ÉµConsole, },\n    { type: StaticSymbolCache, decorators: [{ type: _angular_core.Optional },] },\n    { type: CompileReflector, },\n    { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n]; };\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = _angular_core.resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof _angular_core.Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return _angular_core.Éµstringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + _angular_core.Éµstringify(compType) + \" is still being loaded!\");\n    ((error))[_angular_core.ÉµERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TypeModifier = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    /**\n     * @param {?=} modifiers\n     */\n    function Type$1(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Type$1.prototype.visitType = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type$1.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type$1;\n}());\nvar BuiltinTypeName = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     */\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nvar BinaryOperator = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nvar Expression = (function () {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expression.prototype.visitExpression = function (visitor, context) { };\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\nvar BuiltinVar = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = name;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\nvar BuiltinMethod = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = method;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    /**\n     * @param {?} moduleName\n     * @param {?} name\n     * @param {?} runtime\n     */\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} quoted\n     */\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\nvar StmtModifier = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier.Exported = 2;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Statement.prototype.visitStatement = function (visitor, context) { };\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    /**\n     * @param {?} type\n     * @param {?} modifiers\n     */\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = function (modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    /**\n     * @param {?} comment\n     * @param {?=} sourceSpan\n     */\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\nvar AstTransformer$1 = (function () {\n    function AstTransformer$1() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformExpr = function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.transformStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteVarExpr = function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitWritePropExpr = function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitInstantiateExpr = function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExternalExpr = function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitConditionalExpr = function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitNotExpr = function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCastExpr = function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitFunctionExpr = function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadPropExpr = function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReadKeyExpr = function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommaExpr = function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitExpressionStmt = function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitReturnStmt = function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitIfStmt = function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitThrowStmt = function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitCommentStmt = function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer$1;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor$1() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadVarExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteVarExpr = function (expr, context) {\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWriteKeyExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.index.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitWritePropExpr = function (expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeMethodExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInvokeFunctionExpr = function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitInstantiateExpr = function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExternalExpr = function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitConditionalExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitNotExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAssertNotNullExpr = function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCastExpr = function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitFunctionExpr = function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitBinaryOperatorExpr = function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadPropExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReadKeyExpr = function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralArrayExpr = function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitLiteralMapExpr = function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommaExpr = function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllExpressions = function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareVarStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitExpressionStmt = function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitReturnStmt = function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitDeclareClassStmt = function (stmt, context) {\n        var _this = this;\n        ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitIfStmt = function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitTryCatchStmt = function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitThrowStmt = function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor$1.prototype.visitAllStatements = function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor$1;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    /**\n     * @param {?} sourceSpan\n     */\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return expr != null ? ((new ExpressionType(expr, typeModifiers))) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    /**\n     * @param {?} ctx\n     */\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    /**\n     * @param {?} ngModuleFactoryVar\n     */\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    /**\n     * @param {?} reflector\n     */\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\nNgModuleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleCompiler.ctorParameters = function () { return [\n    { type: CompileReflector, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    /**\n     * @param {?=} file\n     */\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the âsourcesâ list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @abstract\n */\nvar _EmittedLine = (function () {\n    /**\n     * @param {?} indent\n     */\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    /**\n     * @param {?} _indent\n     */\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = function () { return ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = function (sourceFilePath, genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - emittedLine.indent;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCastExpr = function (ast, context) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.getBuiltinMethodName = function (method) { };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) { };\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = function (srcFilePath, genFilePath, stmts, preamble, emitSourceMaps) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor();\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = function (srcFilePath, genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor() {\n        var _this = _super.call(this, false) || this;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(_angular_core.SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(_angular_core.SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(_angular_core.SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(_angular_core.SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === _angular_core.NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === _angular_core.CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : _angular_core.SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\nDomElementSchemaRegistry.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDomElementSchemaRegistry.ctorParameters = function () { return []; };\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    /**\n     * @param {?} selector\n     */\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    \n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} setValue\n     */\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    /**\n     * @param {?} _urlResolver\n     */\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = function (outputCtx, comp) {\n        var /** @type {?} */ template = ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = function (outputCtx, comp, stylesheet) {\n        return this._compileStyles(outputCtx, comp, stylesheet, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = function (comp) {\n        return ((comp.template)).encapsulation === _angular_core.ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = function (outputCtx, comp, stylesheet, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ shim = this.needsStyleShim(comp);\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = function (style$$1, shim) {\n        return shim ? this._shadowCss.shimCssText(style$$1, CONTENT_ATTR, HOST_ATTR) : style$$1;\n    };\n    return StyleCompiler;\n}());\nStyleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nStyleCompiler.ctorParameters = function () { return [\n    { type: UrlResolver, },\n]; };\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    return EventHandlerVars;\n}());\nEventHandlerVars.event = variable('$event');\nvar ConvertActionBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) { return ({\n                    key: k.key,\n                    value: values[i],\n                    quoted: k.quoted,\n                }); });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nvar _Mode = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    /**\n     * @param {?} _converterFactory\n     */\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     */\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional: function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote: function (ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall: function (ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead: function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        ((arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    /**\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _schemaRegistry\n     */\n    function ViewCompiler(_config, _reflector, _schemaRegistry) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._schemaRegistry = _schemaRegistry;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nViewCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nViewCompiler.ctorParameters = function () { return [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: ElementSchemaRegistry, },\n]; };\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder = (function () {\n    /**\n     * @param {?} reflector\n     * @param {?} outputCtx\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            expressionType(outputCtx.importExpr(this.component.type.reference));\n    }\n    Object.defineProperty(ViewBuilder.prototype, \"viewName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ])\n                }); });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () { return ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                ])\n            }); });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === _angular_core.ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                literal(ast.ngContentIndex), literal(ast.index)\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = function (ast, context) {\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr([literal(ast.value)])\n            ])\n        }); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = (ast.value);\n        var /** @type {?} */ inter = (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n        // textDef(ngContentIndex: number, constants: string[]): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: importExpr(Identifiers.textDef).callFn([\n                literal(ast.ngContentIndex), literalArr(inter.strings.map(function (s) { return literal(s); }))\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                variable(childVisitor.viewName),\n            ])\n        }); };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) { return ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst: inputAst,\n                dirAst: /** @type {?} */ (null),\n            }); })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }); });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = (NULL_EXPR);\n        var /** @type {?} */ compView = (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // elementDef(\n        //   flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n        //   ngContentIndex: number, childCount: number, namespaceAndName: string,\n        //   fixedAttrs: [string, string][] = [],\n        //   bindings?: [BindingFlags, string, string | SecurityContext][],\n        //   outputs?: ([OutputType.ElementOutput | OutputType.DirectiveHostOutput, string, string])[],\n        //   handleEvent?: ElementHandleEventFn,\n        //   componentView?: () => ViewDefinition, componentRendererType?: RendererType2): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: importExpr(Identifiers.elementDef).callFn([\n                literal(flags),\n                queryMatchesExpr,\n                literal(ast.ngContentIndex),\n                literal(childCount),\n                literal(elName),\n                elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        }); };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(_angular_core.ÉµelementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = ((undefined));\n            var /** @type {?} */ dirIndex = ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: importExpr(Identifiers.queryDef).callFn([\n                    literal(flags), literal(queryId),\n                    new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                ]),\n            }); });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                    nodeIndex: nodeIndex,\n                    bindingIndex: bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }); });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n            context: dirContextExpr,\n            dirAst: dirAst,\n            inputAst: inputAst,\n        }); });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst: dirAst,\n        }); });\n        // directiveDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], childCount: number, ctor:\n        //   any,\n        //   deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n        //   outputs?: {[name: string]: string}, component?: () => ViewDefinition): NodeDef;\n        this.nodes[nodeIndex] = function () { return ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                literal(flags), queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                literal(childCount), providerExpr, depsExpr,\n                inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        }); };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr_1 = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr_1,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: importExpr(Identifiers.providerDef).callFn([\n                literal(data.flags),\n                data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }); });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralArrayConverter = function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // pureArrayDef(argCount: number): NodeDef;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: importExpr(Identifiers.pureArrayDef).callFn([literal(argCount)])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype.createLiteralMapConverter = function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        // function pureObjectDef(propToIndex: {[p: string]: number}): NodeDef\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (Object.assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: importExpr(Identifiers.pureObjectDef).callFn([map])\n        }); });\n        return function (args) { return callCheckStmt(nodeIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype.createPipeConverter = function (expression, name, argCount) {\n        var /** @type {?} */ pipe = ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ nodeIndex_1 = this.nodes.length;\n            // function purePipeDef(argCount: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: importExpr(Identifiers.purePipeDef).callFn([literal(argCount)])\n            }); });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(nodeIndex_1, [pipeValueExpr_1].concat(args))); };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () { return ({\n            sourceSpan: sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n            ])\n        }); });\n        return nodeIndex;\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) { return _this.createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                createLiteralMapConverter: function (keys) { return _this.createLiteralMapConverter(expression.sourceSpan, keys); },\n                createPipeConverter: function (name, argCount) { return _this.createPipeConverter(expression, name, argCount); }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = _angular_core.ÉµelementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} sourceOrStmts\n     */\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    var /** @type {?} */ forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n    // Add summaries that are referenced by the given symbols (transitively)\n    // Note: the serializer.symbols array might be growing while\n    // we execute the loop!\n    for (var /** @type {?} */ processedIndex = 0; processedIndex < toJsonSerializer.symbols.length; processedIndex++) {\n        var /** @type {?} */ symbol = toJsonSerializer.symbols[processedIndex];\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n            var /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                var /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            if (summary) {\n                if (summary.type) {\n                    forJitSerializer.addLibType(summary.type);\n                }\n                toJsonSerializer.addOrMergeSummary(summary);\n            }\n        }\n    }\n    // Add type summaries.\n    // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n    // as the type summaries already contain the transitive data that they require\n    // (in a minimal way).\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addOrMergeSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        if (summary.summaryKind === CompileSummaryKind.NgModule) {\n            var /** @type {?} */ ngModuleSummary = (summary);\n            ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                var /** @type {?} */ symbol = id.reference;\n                if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ summary_1 = summaryResolver.resolveSummary(symbol);\n                    if (summary_1) {\n                        toJsonSerializer.addOrMergeSummary(summary_1);\n                    }\n                }\n            });\n        }\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    forJitSerializer.serialize(exportAs);\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache);\n    return deserializer.deserialize(json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    function ToJsonSerializer(symbolResolver, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        // Note: This only contains symbols without members.\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addOrMergeSummary = function (summary) {\n        var /** @type {?} */ symbolMeta = summary.metadata;\n        if (symbolMeta && symbolMeta.__symbolic === 'class') {\n            // For classes, we keep everything except their class decorators.\n            // We need to keep e.g. the ctor args, method names, method decorators\n            // so that the class can be extended in another compilation unit.\n            // We don't keep the class decorators as\n            // 1) they refer to data\n            //   that should not cause a rebuild of downstream compilation units\n            //   (e.g. inline templates of @Component, or @NgModule.declarations)\n            // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n            var /** @type {?} */ clone_1 = {};\n            Object.keys(symbolMeta).forEach(function (propName) {\n                if (propName !== 'decorators') {\n                    clone_1[propName] = symbolMeta[propName];\n                }\n            });\n            symbolMeta = clone_1;\n        }\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!processedSummary) {\n            processedSummary = this.processValue({ symbol: summary.symbol });\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.metadata == null && symbolMeta != null) {\n            processedSummary.metadata = this.processValue(symbolMeta);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.type == null && summary.type != null) {\n            processedSummary.type = this.processValue(summary.type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    importAs = symbol.name + \"_\" + index;\n                    exportAs.push({ symbol: symbol, exportAs: importAs });\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    // We convert the source filenames tinto output filenames,\n                    // as the generated summary file will be used when the current\n                    // compilation unit is used as a library\n                    filePath: _this.summaryResolver.getLibraryFileName(symbol.filePath),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = function (value) { return visitValue(value, this, null); };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.indexBySymbol.size;\n                this.indexBySymbol.set(baseSymbol, index);\n                this.symbols.push(baseSymbol);\n            }\n            return { __symbol: index, members: value.members };\n        }\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    /**\n     * @param {?} outputCtx\n     * @param {?} symbolResolver\n     */\n    function ForJitSerializer(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = function (summary) {\n        this.data.set(summary.type.reference, { summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = function (exportAs) {\n        var _this = this;\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata, isLibrary = _a.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = (summary);\n                modSummary.modules.forEach(function (mod) { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(_this.outputCtx, summary.type.reference, _this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach(function (entry) {\n            var /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                var /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName).set(_this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    StmtModifier.Exported\n                ]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary(/** @type {?} */ ({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        })); }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    /**\n     * @param {?} symbolCache\n     */\n    function FromJsonDeserializer(symbolCache) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        return _this;\n    }\n    /**\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = function (json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach(function (serializedSymbol) {\n            var /** @type {?} */ symbol = _this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n            _this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        var /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries: summaries, importAs: importAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotCompiler = (function () {\n    /**\n     * @param {?} _config\n     * @param {?} _host\n     * @param {?} _reflector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _localeId\n     * @param {?} _translationFormat\n     * @param {?} _enableSummariesForJit\n     * @param {?} _symbolResolver\n     */\n    function AotCompiler(_config, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _enableSummariesForJit, _symbolResolver) {\n        this._config = _config;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._localeId = _localeId;\n        this._translationFormat = _translationFormat;\n        this._enableSummariesForJit = _enableSummariesForJit;\n        this._symbolResolver = _symbolResolver;\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllStubs = function (analyzeResult) {\n        var _this = this;\n        var files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, false); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitPartialStubs = function (analyzeResult) {\n        var _this = this;\n        var files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, true); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) { return _this._compileImplFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} partial\n     * @return {?}\n     */\n    AotCompiler.prototype._compileStubFile = function (srcFileUrl, directives, pipes, ngModules, partial) {\n        var _this = this;\n        // partial is true when we only need the files we are certain will produce a factory and/or\n        // summary.\n        // This is the normal case for `ngc` but if we assume libraryies are generating their own\n        // factories\n        // then we might need a factory for a file that re-exports a module or factory which we cannot\n        // know\n        // ahead of time so we need a stub generate for all non-.d.ts files. The .d.ts files do not need\n        // to\n        // be excluded here because they are excluded when the modules are analyzed. If a factory ends\n        // up\n        // not being needed, the factory file is not written in writeFile callback.\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ ngFactoryOutputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        var /** @type {?} */ jitSummaryOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n        // create exports that user code can reference\n        ngModules.forEach(function (ngModuleReference) {\n            _this._ngModuleCompiler.createStub(ngFactoryOutputCtx, ngModuleReference);\n            createForJitStub(jitSummaryOutputCtx, ngModuleReference);\n        });\n        var /** @type {?} */ partialJitStubRequired = false;\n        var /** @type {?} */ partialFactoryStubRequired = false;\n        // create stubs for external stylesheets (always empty, as users should not import anything from\n        // the generated code)\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            partialJitStubRequired = true;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                var /** @type {?} */ styleContext = _this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMeta.moduleUrl)), _this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n                _createTypeReferenceStub(styleContext, Identifiers.ComponentFactory);\n                generatedFiles.push(_this._codegenSourceModule(/** @type {?} */ ((stylesheetMeta.moduleUrl)), styleContext));\n            });\n            partialFactoryStubRequired = true;\n        });\n        // If we need all the stubs to be generated then insert an arbitrary reference into the stub\n        if ((partialFactoryStubRequired || !partial) && ngFactoryOutputCtx.statements.length <= 0) {\n            _createTypeReferenceStub(ngFactoryOutputCtx, Identifiers.ComponentFactory);\n        }\n        if ((partialJitStubRequired || !partial || (pipes && pipes.length > 0)) &&\n            jitSummaryOutputCtx.statements.length <= 0) {\n            _createTypeReferenceStub(jitSummaryOutputCtx, Identifiers.ComponentFactory);\n        }\n        // Note: we are creating stub ngfactory/ngsummary for all source files,\n        // as the real calculation requires almost the same logic as producing the real content for\n        // them. Our pipeline will filter out empty ones at the end. Because of this filter, however,\n        // stub references to the reference type needs to be generated even if the user cannot\n        // refer to type from the `.d.ts` file to prevent the file being elided from the emit.\n        generatedFiles.push(this._codegenSourceModule(srcFileUrl, ngFactoryOutputCtx));\n        if (this._enableSummariesForJit) {\n            generatedFiles.push(this._codegenSourceModule(srcFileUrl, jitSummaryOutputCtx));\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleType) { return _this._compileModule(outputCtx, ngModuleType); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                generatedFiles.push(_this._codegenStyles(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compMeta, stylesheetMeta, fileSuffix));\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = function (srcFileUrl, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(ref)))\n        }); }).concat(directives.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n        }); }), pipes.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n        }); }), injectables.map(function (ref) { return ({\n            summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n            metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n        }); }));\n        var /** @type {?} */ forJitOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n        var _a = serializeSummaries(forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json);\n        if (this._enableSummariesForJit) {\n            return [summaryJson, this._codegenSourceModule(srcFileUrl, forJitOutputCtx)];\n        }\n        return [summaryJson];\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModuleType\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = function (outputCtx, ngModuleType) {\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(ngModuleType)));\n        var /** @type {?} */ providers = [];\n        if (this._localeId) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: this._localeId,\n            });\n        }\n        if (this._translationFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._translationFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n        var /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _this = this;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = function (srcFileUrl, compMeta, stylesheetMetadata, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction _createTypeReferenceStub(outputCtx, reference) {\n    outputCtx.statements.push(importExpr(reference).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n    var _a = _createNgModules(programStaticSymbols, host, metadataResolver), ngModules = _a.ngModules, symbolsMissingModule = _a.symbolsMissingModule;\n    return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n    if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = result.symbolsMissingModule.map(function (s) { return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\"; });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n    var /** @type {?} */ moduleMetasByRef = new Map();\n    ngModuleMetas.forEach(function (ngModule) { return moduleMetasByRef.set(ngModule.type.reference, ngModule); });\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ ngModulesByFile = new Map();\n    var /** @type {?} */ ngDirectivesByFile = new Map();\n    var /** @type {?} */ ngPipesByFile = new Map();\n    var /** @type {?} */ ngInjectablesByFile = new Map();\n    var /** @type {?} */ filePaths = new Set();\n    // Make sure we produce an analyzed file for each input file\n    programSymbols.forEach(function (symbol) {\n        var /** @type {?} */ filePath = symbol.filePath;\n        filePaths.add(filePath);\n        if (metadataResolver.isInjectable(symbol)) {\n            ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n        }\n    });\n    // Looping over all modules to construct:\n    // - a map from file to modules `ngModulesByFile`,\n    // - a map from file to directives `ngDirectivesByFile`,\n    // - a map from file to pipes `ngPipesByFile`,\n    // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n    ngModuleMetas.forEach(function (ngModuleMeta) {\n        var /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n        filePaths.add(srcFileUrl);\n        ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n        ngModuleMeta.declaredDirectives.forEach(function (dirIdentifier) {\n            var /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n            ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n        });\n        ngModuleMeta.declaredPipes.forEach(function (pipeIdentifier) {\n            var /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n            ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n        });\n    });\n    var /** @type {?} */ files = [];\n    filePaths.forEach(function (srcUrl) {\n        var /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n        var /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n        var /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n        var /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n        files.push({ srcUrl: srcUrl, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables });\n    });\n    return {\n        // map directive/pipe to module\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        // list modules and directives for every source file\n        files: files,\n        ngModules: ngModuleMetas, symbolsMissingModule: symbolsMissingModule\n    };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nfunction extractProgramSymbols(staticSymbolResolver, files, host) {\n    var /** @type {?} */ staticSymbols = [];\n    files.filter(function (fileName) { return host.isSourceFile(fileName); }).forEach(function (sourceFile) {\n        staticSymbolResolver.getSymbolsOf(sourceFile).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (symbolMeta) {\n                if (symbolMeta.__symbolic != 'error') {\n                    // Ignore symbols that are only included to record error information.\n                    staticSymbols.push(resolvedSymbol.symbol);\n                }\n            }\n        });\n    });\n    return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(programStaticSymbols, host, metadataResolver) {\n    var /** @type {?} */ ngModules = new Map();\n    var /** @type {?} */ programPipesAndDirectives = [];\n    var /** @type {?} */ ngModulePipesAndDirective = new Set();\n    var /** @type {?} */ addNgModule = function (staticSymbol) {\n        if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n            return false;\n        }\n        var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n        if (ngModule) {\n            ngModules.set(ngModule.type.reference, ngModule);\n            ngModule.declaredDirectives.forEach(function (dir) { return ngModulePipesAndDirective.add(dir.reference); });\n            ngModule.declaredPipes.forEach(function (pipe) { return ngModulePipesAndDirective.add(pipe.reference); });\n            // For every input module add the list of transitively included modules\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return addNgModule(modMeta.reference); });\n        }\n        return !!ngModule;\n    };\n    programStaticSymbols.forEach(function (staticSymbol) {\n        if (!addNgModule(staticSymbol) &&\n            (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n            programPipesAndDirectives.push(staticSymbol);\n        }\n    });\n    // Throw an error if any of the program pipe or directives is not declared by a module\n    var /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(function (s) { return !ngModulePipesAndDirective.has(s); });\n    return { ngModules: Array.from(ngModules.values()), symbolsMissingModule: symbolsMissingModule };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.annotationNames = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [_angular_core.Directive, _angular_core.Component]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [_angular_core.Pipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [_angular_core.NgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [_angular_core.Injectable, _angular_core.Pipe, _angular_core.Directive, _angular_core.Component, _angular_core.NgModule]);\n        this.annotationNames.set(_angular_core.Directive, 'Directive');\n        this.annotationNames.set(_angular_core.Component, 'Component');\n        this.annotationNames.set(_angular_core.Pipe, 'Pipe');\n        this.annotationNames.set(_angular_core.NgModule, 'NgModule');\n        this.annotationNames.set(_angular_core.Injectable, 'Injectable');\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = function (ref) {\n        var /** @type {?} */ importSymbol = this.getStaticSymbol(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        var /** @type {?} */ rootSymbol = this.findDeclaration(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        if (importSymbol != rootSymbol) {\n            this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n        }\n        return rootSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = function (type) {\n        var _this = this;\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return ann instanceof requiredType; }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[((summary.type.summaryKind))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return _this.annotationNames.get(type); }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = ((propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = ((ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = ((propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), _angular_core.Injectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), _angular_core.Inject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), _angular_core.Attribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), _angular_core.ContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), _angular_core.ContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), _angular_core.ViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), _angular_core.ViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), _angular_core.Input);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), _angular_core.Output);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), _angular_core.Pipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), _angular_core.HostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), _angular_core.HostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), _angular_core.Directive);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), _angular_core.Component);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), _angular_core.NgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), _angular_core.Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), _angular_core.Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), _angular_core.SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), _angular_core.Optional);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), _angular_core.trigger);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), _angular_core.state);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), _angular_core.transition);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), _angular_core.style);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), _angular_core.animate);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), _angular_core.keyframes);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), _angular_core.sequence);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), _angular_core.group);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    calling.set(functionSymbol, true);\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = ((expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            var /** @type {?} */ spreadArray = simplify(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context\n                    if (expression === self.injectionToken || expression === self.opaqueToken ||\n                        self.conversionMap.has(expression) || references > 0) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplify(expression['expression']);\n                                var /** @type {?} */ index = simplify(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.resolve = function (name) { };\n    /**\n     * @return {?}\n     */\n    BindingScope.build = function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    return BindingScope;\n}());\nBindingScope.missing = {};\nBindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    /**\n     * @param {?} bindings\n     */\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = new Error(message);\n    ((result)).fileName = fileName;\n    ((result)).line = line;\n    ((result)).column = column;\n    return result;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = (function () {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\nvar SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        var /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n        if (result) {\n            return result;\n        }\n        result = ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (result) {\n            return result;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        result = ((this.resolvedSymbols.get(staticSymbol)));\n        return result;\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.fileNameToModuleName = function (importedFilePath, containingFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        var /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n        this._createSymbolsOf(filePath);\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                symbols.add(resolvedSymbol.symbol);\n            }\n        });\n        return Array.from(symbols);\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(/** @type {?} */ moduleExport);\n            }\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module_1 = map['module'];\n                    var /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module_1) {\n                        filePath = ((self.resolveModule(module_1, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module_1 + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name);\n                    }\n                    else if (functionParams.indexOf(name) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name)) {\n                            return self.getStaticSymbol(topLevelPath, name);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? \" relative to $ {\\n            containingFile\\n          } \" : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AotSummaryResolver = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Set();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getLibraryFileName = function (filePath) { return this.host.getOutputFileName(filePath); };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n        this._loadSummaryFile(filePath);\n        return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n        var _this = this;\n        if (this.loadedFilePaths.has(filePath)) {\n            return;\n        }\n        this.loadedFilePaths.add(filePath);\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            var /** @type {?} */ json = void 0;\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n            if (json) {\n                var _a = deserializeSummaries(this.staticSymbolCache, json), summaries = _a.summaries, importAs = _a.importAs;\n                summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                importAs.forEach(function (importAs) {\n                    _this.importAs.set(importAs.symbol, _this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                });\n            }\n        }\n    };\n    return AotSummaryResolver;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    var /** @type {?} */ console = new _angular_core.ÉµConsole();\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate !== false,\n        missingTranslation: options.missingTranslation,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(config, staticReflector, elementSchemaRegistry);\n    var /** @type {?} */ compiler = new AotCompiler(config, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, options.locale || null, options.i18nFormat || null, options.enableSummariesForJit || null, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @return {?}\n */\nfunction interpretStatements(statements) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter();\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    /**\n     * @param {?} value\n     */\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter() {\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n        var /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) { return ast.value.runtime; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ((((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(sourceUrl$$1, ctx, vars) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl$$1;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (_angular_core.isDevMode()) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl$$1, sourceUrl$$1, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @return {?}\n */\nfunction jitStatements(sourceUrl$$1, statements) {\n    var /** @type {?} */ converter = new JitEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl$$1, ctx, converter.getArgs());\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor() {\n        var _this = _super.apply(this, arguments) || this;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n        var /** @type {?} */ value = ast.value.runtime;\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name = identifierName({ reference: ast.value.runtime }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    /**\n     * @param {?} _injector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _summaryResolver\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     */\n    function JitCompiler(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _compilerConfig, _console) {\n        this._injector = _injector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    Object.defineProperty(JitCompiler.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getNgContentSelectors = function (component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        var /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(\"The component \" + _angular_core.Éµstringify(component) + \" is not yet compiled!\");\n        }\n        return ((template.compMeta.template)).ngContentSelectors;\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return new _angular_core.ModuleWithComponentFactories(_this._compileModule(moduleType), componentFactories);\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = function (moduleType) {\n        var _this = this;\n        var /** @type {?} */ ngModuleFactory = ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta_1 = ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(_angular_core.Compiler, { useFactory: function () { return new ModuleBoundCompiler(_this, moduleMeta_1.type.reference); } }))];\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta_1, extraProviders);\n            if (!this._compilerConfig.useJit) {\n                ngModuleFactory =\n                    interpretStatements(outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            else {\n                ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta_1), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            this._compiledNgModuleCache.set(moduleMeta_1.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + _angular_core.Éµstringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ componentFactory = (compMeta.componentFactory);\n            var /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n            var /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (_angular_core.ÉµgetComponentViewDefinitionFactory(componentFactory)));\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ directives = template.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */ ((template.compMeta.template)))), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult;\n        if (!this._compilerConfig.useJit) {\n            evalResult = interpretStatements(outputContext.statements);\n        }\n        else {\n            evalResult = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        }\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(result.outputCtx.statements)[result.stylesVar];\n        }\n        else {\n            return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n        }\n    };\n    return JitCompiler;\n}());\nJitCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompiler.ctorParameters = function () { return [\n    { type: _angular_core.Injector, },\n    { type: CompileMetadataResolver, },\n    { type: TemplateParser, },\n    { type: StyleCompiler, },\n    { type: ViewCompiler, },\n    { type: NgModuleCompiler, },\n    { type: SummaryResolver, },\n    { type: CompilerConfig, },\n    { type: _angular_core.ÉµConsole, },\n]; };\nvar CompiledTemplate = (function () {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        ((this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            ((this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nvar ModuleBoundCompiler = (function () {\n    /**\n     * @param {?} _delegate\n     * @param {?} _ngModule\n     */\n    function ModuleBoundCompiler(_delegate, _ngModule) {\n        this._delegate = _delegate;\n        this._ngModule = _ngModule;\n    }\n    Object.defineProperty(ModuleBoundCompiler.prototype, \"_injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delegate.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleSync = function (moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAsync = function (moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.getNgContentSelectors = function (component) {\n        return this._delegate.getNgContentSelectors(component);\n    };\n    /**\n     * Clears all caches\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCache = function () { this._delegate.clearCache(); };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    ModuleBoundCompiler.prototype.clearCacheFor = function (type) { this._delegate.clearCacheFor(type); };\n    return ModuleBoundCompiler;\n}());\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out) {\n    if (out === void 0) { out = []; }\n    fn$$1().forEach(function (entry) {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) { return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol }); };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\nvar Extractor = (function () {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n        var _a = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = ((((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, ((_this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new _angular_core.ÉµConsole(), symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JitReflector = (function () {\n    function JitReflector() {\n        this.reflectionCapabilities = new _angular_core.ÉµReflectionCapabilities();\n    }\n    /**\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) {\n        var /** @type {?} */ moduleId = cmpMetadata.moduleId;\n        if (typeof moduleId === 'string') {\n            var /** @type {?} */ scheme = getUrlScheme(moduleId);\n            return scheme ? moduleId : \"package:\" + moduleId + MODULE_SUFFIX;\n        }\n        else if (moduleId !== null && moduleId !== void 0) {\n            throw syntaxError(\"moduleId should be a string in \\\"\" + _angular_core.Éµstringify(type) + \"\\\". See https://goo.gl/wIDDiL for more information.\\n\" +\n                \"If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.\");\n        }\n        return \"./\" + _angular_core.Éµstringify(type);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    JitReflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitReflector.prototype.resolveExternalReference = function (ref) { return ref.runtime; };\n    return JitReflector;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _NO_RESOURCE_LOADER = {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get: function (url) {\n        throw new Error(\"No ResourceLoader implementation has been provided. Can't read the url \\\"\" + url + \"\\\"\");\n    }\n};\nvar baseHtmlParser = new _angular_core.InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nvar COMPILER_PROVIDERS = [\n    { provide: CompileReflector, useValue: new JitReflector() },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    JitSummaryResolver,\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    _angular_core.ÉµConsole,\n    Lexer,\n    Parser,\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n    },\n    {\n        provide: I18NHtmlParser,\n        useFactory: function (parser, translations, format, config, console) {\n            translations = translations || '';\n            var missingTranslation = translations ? config.missingTranslation : _angular_core.MissingTranslationStrategy.Ignore;\n            return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n        },\n        deps: [\n            baseHtmlParser,\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS)],\n            [new _angular_core.Optional(), new _angular_core.Inject(_angular_core.TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [_angular_core.ÉµConsole],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: I18NHtmlParser,\n    },\n    TemplateParser,\n    DirectiveNormalizer,\n    CompileMetadataResolver,\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    StyleCompiler,\n    ViewCompiler,\n    NgModuleCompiler,\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    JitCompiler,\n    { provide: _angular_core.Compiler, useExisting: JitCompiler },\n    DomElementSchemaRegistry,\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    UrlResolver,\n    DirectiveResolver,\n    PipeResolver,\n    NgModuleResolver,\n];\nvar JitCompilerFactory = (function () {\n    /**\n     * @param {?} defaultOptions\n     */\n    function JitCompilerFactory(defaultOptions) {\n        var compilerOptions = {\n            useDebug: _angular_core.isDevMode(),\n            useJit: true,\n            defaultEncapsulation: _angular_core.ViewEncapsulation.Emulated,\n            missingTranslation: _angular_core.MissingTranslationStrategy.Warning,\n            enableLegacyTemplate: true,\n        };\n        this._defaultOptions = [compilerOptions].concat(defaultOptions);\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    JitCompilerFactory.prototype.createCompiler = function (options) {\n        if (options === void 0) { options = []; }\n        var /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n        var /** @type {?} */ injector = _angular_core.ReflectiveInjector.resolveAndCreate([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: function () {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        enableLegacyTemplate: opts.enableLegacyTemplate,\n                    });\n                },\n                deps: []\n            }, /** @type {?} */ ((opts.providers))\n        ]);\n        return injector.get(_angular_core.Compiler);\n    };\n    return JitCompilerFactory;\n}());\nJitCompilerFactory.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompilerFactory.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: _angular_core.Inject, args: [_angular_core.COMPILER_OPTIONS,] },] },\n]; };\n/**\n * A platform that included corePlatform and the compiler.\n *\n * \\@experimental\n */\nvar platformCoreDynamic = _angular_core.createPlatformFactory(_angular_core.platformCore, 'coreDynamic', [\n    { provide: _angular_core.COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: _angular_core.CompilerFactory, useClass: JitCompilerFactory },\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(function (options) { return options.useJit; })),\n        defaultEncapsulation: _lastDefined(optionsArr.map(function (options) { return options.defaultEncapsulation; })),\n        providers: _mergeArrays(optionsArr.map(function (options) { return ((options.providers)); })),\n        missingTranslation: _lastDefined(optionsArr.map(function (options) { return options.missingTranslation; })),\n        enableLegacyTemplate: _lastDefined(optionsArr.map(function (options) { return options.enableLegacyTemplate; })),\n    };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined(args) {\n    for (var /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts) {\n    var /** @type {?} */ result = [];\n    parts.forEach(function (part) { return part && result.push.apply(result, part); });\n    return result;\n}\n\nexports.VERSION = VERSION;\nexports.TEMPLATE_TRANSFORMS = TEMPLATE_TRANSFORMS;\nexports.CompilerConfig = CompilerConfig;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.CompileAnimationEntryMetadata = CompileAnimationEntryMetadata;\nexports.CompileAnimationStateMetadata = CompileAnimationStateMetadata;\nexports.CompileAnimationStateDeclarationMetadata = CompileAnimationStateDeclarationMetadata;\nexports.CompileAnimationStateTransitionMetadata = CompileAnimationStateTransitionMetadata;\nexports.CompileAnimationMetadata = CompileAnimationMetadata;\nexports.CompileAnimationKeyframesSequenceMetadata = CompileAnimationKeyframesSequenceMetadata;\nexports.CompileAnimationStyleMetadata = CompileAnimationStyleMetadata;\nexports.CompileAnimationAnimateMetadata = CompileAnimationAnimateMetadata;\nexports.CompileAnimationWithStepsMetadata = CompileAnimationWithStepsMetadata;\nexports.CompileAnimationSequenceMetadata = CompileAnimationSequenceMetadata;\nexports.CompileAnimationGroupMetadata = CompileAnimationGroupMetadata;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.createHostComponentMeta = createHostComponentMeta;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.sourceUrl = sourceUrl;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.extractProgramSymbols = extractProgramSymbols;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.COMPILER_PROVIDERS = COMPILER_PROVIDERS;\nexports.JitCompilerFactory = JitCompilerFactory;\nexports.platformCoreDynamic = platformCoreDynamic;\nexports.JitReflector = JitReflector;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.DEFAULT_PACKAGE_URL_PROVIDER = DEFAULT_PACKAGE_URL_PROVIDER;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COLLECTOR_TOKEN = ERROR_COLLECTOR_TOKEN;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}